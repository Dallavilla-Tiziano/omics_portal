"""
Django settings for omics_portal project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from environs import Env

# Environs set up
env = Env()
env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DJANGO_DEBUG")

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
	'admin_tools',
	'admin_tools.theming',
	'admin_tools.menu',
	'admin_tools.dashboard',

	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django.contrib.sites',
	# Third-party
	'crispy_forms',
	'crispy_bootstrap5',
	'allauth',
	'allauth.account',
	'django_tables2',
	'django_filters',
	'dal',
	'dal_select2',
	'widget_tweaks',
	'tabbed_admin',
	# Local
	'accounts.apps.AccountsConfig',
	'pages.apps.PagesConfig',
	'patients.apps.PatientsConfig',
	'kokoro.apps.KokoroConfig',
	'submissions.apps.SubmissionsConfig',
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
	# Third-party
	"allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = 'omics_portal.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [BASE_DIR / "templates"],
		'APP_DIRS': False,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
			'loaders': [
				(
					'admin_tools.template_loaders.Loader',
					[
						'django.template.loaders.filesystem.Loader',
						'django.template.loaders.app_directories.Loader',
					]
				),
				'django.template.loaders.filesystem.Loader',
				'django.template.loaders.app_directories.Loader',  # ‚Üê Add this line
			],
		},
	},
]




WSGI_APPLICATION = 'omics_portal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
	"default": {
		"ENGINE": "django.db.backends.postgresql",
		"NAME": "omics_portal",
		"USER": "postgres",
		"PASSWORD": "postgres",
		"HOST": "db",
		"PORT": 5432,
	}
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Rome'

USE_I18N = True

USE_TZ = True

DATE_FORMAT = "d-m-Y"

# django-allauth config
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_LOGIN_METHOD = "email"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
LOGIN_REDIRECT_URL = "home"
ACCOUNT_LOGOUT_REDIRECT = "account_login"
SITE_ID = 1
AUTHENTICATION_BACKENDS = (
		"django.contrib.auth.backends.ModelBackend",
		"allauth.account.auth_backends.AuthenticationBackend"
	)
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.mailersend.net"
EMAIL_PORT = 587  # Use 465 for SSL
EMAIL_USE_TLS = True  # Use False if using SSL (465)
EMAIL_HOST_USER = "MS_KYa3yg@trial-z3m5jgr38j0gdpyo.mlsender.net"
EMAIL_HOST_PASSWORD = "mssp.J2SLOXD.3vz9dlej0yn4kj50.F17wNuA"  # The API key is both username & password
DEFAULT_FROM_EMAIL = "MS_KYa3yg@trial-z3m5jgr38j0gdpyo.mlsender.net"  # Use your verified MailerSend sender email


# django-crispy-forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR/"static"]
STATIC_ROOT = BASE_DIR/"staticfiles"
STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = "accounts.CustomUser"

LOGOUT_REDIRECT_URL = "account_login"

ADMIN_TOOLS_INDEX_DASHBOARD = 'pages.dashboard.CustomIndexDashboard'
ADMIN_TOOLS_MENU = 'pages.menu.CustomMenu'

TABBED_ADMIN_USE_JQUERY_UI = True