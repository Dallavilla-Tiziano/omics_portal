# Generated by Django 5.1.6 on 2025-05-09 11:42

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('kokoro', '0010_patientprofile_allergies_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cardiomiopathies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Cardiomiopathy',
                'verbose_name_plural': 'Cardiomiopathies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Riskfactors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Riskfactor',
                'verbose_name_plural': 'Riskfactors',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Symptoms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Therapy',
                'verbose_name_plural': 'Therapies',
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='comorbidities',
            options={'ordering': ['name'], 'verbose_name': 'Comorbidity', 'verbose_name_plural': 'Comorbidities'},
        ),
        migrations.RemoveField(
            model_name='clinical_evaluation',
            name='EvaluationPreATC',
        ),
        migrations.RemoveField(
            model_name='clinical_evaluation',
            name='SVT',
        ),
        migrations.RemoveField(
            model_name='clinical_evaluation',
            name='atrial_fibrillation',
        ),
        migrations.RemoveField(
            model_name='clinical_evaluation',
            name='atrial_tachycardia',
        ),
        migrations.RemoveField(
            model_name='clinical_evaluation',
            name='besv',
        ),
        migrations.RemoveField(
            model_name='clinical_evaluation',
            name='bev',
        ),
        migrations.RemoveField(
            model_name='clinical_evaluation',
            name='flutter',
        ),
        migrations.RemoveField(
            model_name='clinical_evaluation',
            name='paroxysmal_supraventricular_tachycardia',
        ),
        migrations.RemoveField(
            model_name='clinical_evaluation',
            name='premature_ventricular_contraction',
        ),
        migrations.RemoveField(
            model_name='clinical_evaluation',
            name='thrombosis',
        ),
        migrations.RemoveField(
            model_name='clinical_evaluation',
            name='wolff_parkinson_white',
        ),
        migrations.RemoveField(
            model_name='comorbidities',
            name='arterial_hypertension',
        ),
        migrations.RemoveField(
            model_name='comorbidities',
            name='patient',
        ),
        migrations.AddField(
            model_name='clinical_evaluation',
            name='Primary_Cause_of_CD',
            field=models.CharField(choices=[('Ischemic', 'Ischemic'), ('Non Ischemic', 'Non Ischemic')], default='', max_length=13),
        ),
        migrations.AddField(
            model_name='clinical_evaluation',
            name='comorbidities',
            field=models.ManyToManyField(blank=True, help_text='Comorbidities this patient have.', related_name='clinical_evaluation', to='kokoro.comorbidities'),
        ),
        migrations.AddField(
            model_name='clinical_evaluation',
            name='mi_zone',
            field=models.CharField(choices=[('Anterior', 'Anterior'), ('Anterolateral', 'Anterolateral'), ('Apical', 'Apical'), ('Right wall', 'Right wall'), ('Inferior', 'Inferior'), ('Infero-postero lateral', 'Infero-postero lateral')], default='', max_length=100),
        ),
        migrations.AddField(
            model_name='clinical_evaluation',
            name='nyha',
            field=models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV')], default='', max_length=4),
        ),
        migrations.AddField(
            model_name='clinical_evaluation',
            name='specify_ischemic',
            field=models.CharField(choices=[('CAD with Myocardial Infarction', 'CAD with Myocardial Infarction'), ('CAD without Myocardial Infarction', 'CAD without Myocardial Infarction')], default='', max_length=100),
        ),
        migrations.AddField(
            model_name='clinical_evaluation',
            name='specify_non_ischemic',
            field=models.CharField(choices=[('dilates', 'dilates'), ('hypokinetic', 'hypokinetic'), ('hypertrophic', 'hypertrophic'), ('hypertensive', 'hypertensive')], default='', max_length=100),
        ),
        migrations.AddField(
            model_name='comorbidities',
            name='name',
            field=models.CharField(default='', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='comorbidities',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.CreateModel(
            name='Adrenaline_test',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_provocative_test', models.DateField()),
                ('adrenaline_dose', models.FloatField(blank=True, null=True)),
                ('adrenaline_result', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Weakly positive', 'Weakly positive')], default='', max_length=16)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kokoro.patientprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ajmaline_test',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_provocative_test', models.DateField()),
                ('ajmaline_dose', models.FloatField(blank=True, null=True)),
                ('ajmaline_dose_per_kg', models.FloatField(blank=True, null=True)),
                ('ajmaline_result', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Weakly positive', 'Weakly positive')], default='', max_length=16)),
                ('induced_arrhythmia', models.CharField(choices=[('VF', 'VF'), ('NSVF', 'NSVF'), ('VFNS', 'VFNS'), ('VT', 'VT'), ('VTNS', 'VTNS')], default='', max_length=5)),
                ('bas_area_a_160', models.FloatField(blank=True, null=True)),
                ('bas_area_a_180', models.FloatField(blank=True, null=True)),
                ('bas_area_a_200', models.FloatField(blank=True, null=True)),
                ('bas_area_a_250', models.FloatField(blank=True, null=True)),
                ('bas_area_a_280_300', models.FloatField(blank=True, null=True)),
                ('pdm', models.FloatField(blank=True, null=True)),
                ('brs_pattern', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('Suspect', 'Suspect')], default='', max_length=8)),
                ('dose_to_positive_ecg', models.FloatField(blank=True, null=True)),
                ('time_to_positive_ecg', models.DurationField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kokoro.patientprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='clinical_evaluation',
            name='cardiomiopathies',
            field=models.ManyToManyField(blank=True, help_text='Cardiomiopathies this patient have.', related_name='clinical_evaluation', to='kokoro.cardiomiopathies'),
        ),
        migrations.CreateModel(
            name='ECG',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_exam', models.DateField()),
                ('max_pressure', models.FloatField(blank=True, null=True)),
                ('min_pressure', models.FloatField(blank=True, null=True)),
                ('atrial_rhythmh', models.CharField(choices=[('Sinus Rhythm', 'Sinus Rhythm'), ('AF', 'AF'), ('Flutter', 'Flutter')], default='', max_length=100)),
                ('hr', models.FloatField(blank=True, null=True)),
                ('rr', models.FloatField(blank=True, null=True)),
                ('pq', models.FloatField(blank=True, null=True)),
                ('pr', models.FloatField(blank=True, null=True)),
                ('qrs', models.FloatField(blank=True, null=True)),
                ('qt', models.FloatField(blank=True, null=True)),
                ('qtc', models.FloatField(blank=True, null=True)),
                ('max_st', models.FloatField(blank=True, null=True)),
                ('rbbb', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('lrbbb', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('irbbb', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('early_rep', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('fragmented_qrs', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('brs', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], default='', max_length=4)),
                ('av_block', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], default='', max_length=14)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kokoro.patientprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ECHO',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_exam', models.DateField()),
                ('max_pressure', models.FloatField(blank=True, null=True)),
                ('min_pressure', models.FloatField(blank=True, null=True)),
                ('lvef', models.FloatField(blank=True, null=True)),
                ('tapse', models.FloatField(blank=True, null=True)),
                ('left_atrial_area', models.FloatField(blank=True, null=True)),
                ('la_diameter', models.FloatField(blank=True, null=True)),
                ('la_end_diastolic_volume', models.FloatField(blank=True, null=True)),
                ('la_end_systolic_volume', models.FloatField(blank=True, null=True)),
                ('lv_end_diastolic_volume', models.FloatField(blank=True, null=True)),
                ('lv_end_systolic_volume', models.FloatField(blank=True, null=True)),
                ('lv_end_diastolic_diameter', models.FloatField(blank=True, null=True)),
                ('lv_end_systolic_diameter', models.FloatField(blank=True, null=True)),
                ('anatomical_alterations', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('aortic_valvulopathy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('type_of_aortic_valvulopathy', models.CharField(choices=[('Regurgitation', 'Regurgitation'), ('Stenosis', 'Stenosis'), ('Both', 'Both')], default='', max_length=13)),
                ('severity_of_aortic_valvulopathy', models.CharField(choices=[('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Severe', 'Severe')], default='', max_length=13)),
                ('mitral_valvulopathy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('type_of_mitral_valvulopathy', models.CharField(choices=[('Regurgitation', 'Regurgitation'), ('Stenosis', 'Stenosis'), ('Both', 'Both')], default='', max_length=13)),
                ('severity_of_mitral_valvulopathy', models.CharField(choices=[('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Severe', 'Severe')], default='', max_length=13)),
                ('tricuspid_valvulopathy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('type_of_tricuspid_valvulopathy', models.CharField(choices=[('Regurgitation', 'Regurgitation'), ('Stenosis', 'Stenosis'), ('Both', 'Both')], default='', max_length=13)),
                ('severity_of_tricuspid_valvulopathy', models.CharField(choices=[('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Severe', 'Severe')], default='', max_length=13)),
                ('diastolic_function', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kokoro.patientprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EP_study',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_provocative_test', models.DateField()),
                ('ep_result', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=9)),
                ('induced_arrhythmia', models.CharField(choices=[('VF', 'VF'), ('NSVF', 'NSVF'), ('VFNS', 'VFNS'), ('VT', 'VT'), ('VTNS', 'VTNS')], default='', max_length=9)),
                ('total_area', models.FloatField(blank=True, null=True)),
                ('bas_area_a_160', models.FloatField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kokoro.patientprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_visit', models.DateField()),
                ('resuscitated_cardiac_arrest', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('arrhythmias', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('type_of_arrhythmias', models.CharField(choices=[('SVT', 'SVT'), ('VT/VF', 'VT/VF')], max_length=6)),
                ('cardiac_transplantation', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('Stroke_or_TIA', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('death', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('death_cause', models.CharField(blank=True, default='', max_length=100)),
                ('other_FU', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('type_of_other_FU', models.CharField(blank=True, default='', max_length=100)),
                ('rm_alert', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('type_of_rm_alert', models.CharField(choices=[('Arrhythmia', 'Arrhythmia'), ('Low battery', 'Low battery'), ('Low CRT stimulation', 'Low CRT stimulation'), ('Heart failure', 'Heart failure'), ('Interference', 'Interference'), ('Noise', 'Noise'), ('Pause', 'Pause'), ('Burden', 'Burden'), ('Undersensing', 'Undersensing'), ('Bradycardia', 'Bradycardia'), ('Decreasing biventricular pacing', 'Decreasing biventricular pacing'), ('Decreasing RV sensing', 'Decreasing RV sensing')], default='', max_length=32)),
                ('doc_indications', models.CharField(blank=True, default='', max_length=200)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kokoro.patientprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Flecainide_test',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_provocative_test', models.DateField()),
                ('flecainide_dose', models.FloatField(blank=True, null=True)),
                ('flecainide_result', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative')], default='', max_length=9)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kokoro.patientprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Late_potentials',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_exam', models.DateField()),
                ('max_pressure', models.FloatField(blank=True, null=True)),
                ('min_pressure', models.FloatField(blank=True, null=True)),
                ('basal_lp1', models.FloatField(blank=True, null=True)),
                ('basal_lp2', models.FloatField(blank=True, null=True)),
                ('basal_lp3', models.FloatField(blank=True, null=True)),
                ('basal_lp4', models.FloatField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kokoro.patientprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='clinical_evaluation',
            name='riskfactors',
            field=models.ManyToManyField(blank=True, help_text='Risk Factors of this patient.', related_name='clinical_evaluation', to='kokoro.riskfactors'),
        ),
        migrations.CreateModel(
            name='RMN_TC_PH',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_exam', models.DateField()),
                ('max_pressure', models.FloatField(blank=True, null=True)),
                ('min_pressure', models.FloatField(blank=True, null=True)),
                ('anatomical_alterations', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('lge', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('type_of_lge', models.CharField(choices=[('Meso', 'Meso'), ('Sub-Epi', 'Sub-Epi'), ('Sub-Endo', 'Sub-Endo')], default='', max_length=9)),
                ('location_of_lge', models.CharField(choices=[('Right', 'Right'), ('Left', 'Left'), ('Both', 'Both')], default='', max_length=5)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kokoro.patientprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='clinical_evaluation',
            name='symptoms',
            field=models.ManyToManyField(blank=True, help_text='Symptoms this patient have.', related_name='clinical_evaluation', to='kokoro.symptoms'),
        ),
    ]
